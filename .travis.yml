language: python
services:
  - docker
env:
  # LINTERS
  - >
    toxenv=linters
    image=logan2211/docker-ci
    tag=ubuntu-xenial
    init=/lib/systemd/systemd
    run_opts="-u root --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  # ANSIBLE 2.1 (NEWTON)
  - >
    toxenv=functional_2.1
    image=logan2211/docker-ci
    tag=ubuntu-xenial
    init=/lib/systemd/systemd
    run_opts="-u root --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - >
    toxenv=functional_2.1
    image=logan2211/docker-ci
    tag=ubuntu-trusty
    init=/sbin/init
    run_opts="-u root --privileged"
  # ANSIBLE 2.2 (OCATA)
  - >
    toxenv=functional_2.2
    image=logan2211/docker-ci
    tag=ubuntu-xenial
    init=/lib/systemd/systemd
    run_opts="-u root --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - >
    toxenv=functional_2.2
    image=logan2211/docker-ci
    tag=centos-7
    init=/usr/lib/systemd/systemd
    run_opts="-u root --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  # ANSIBLE stable (OSA MASTER)
  - >
    toxenv=functional_stable
    image=logan2211/docker-ci
    tag=ubuntu-xenial
    init=/lib/systemd/systemd
    run_opts="-u root --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - >
    toxenv=functional_stable
    image=logan2211/docker-ci
    tag=centos-7
    init=/usr/lib/systemd/systemd
    run_opts="-u root --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
before_install:
  - 'docker pull ${image}:${tag}'
script:
  # Create a random file to store the container ID.
  - container_id=$(mktemp)
  - 'docker run --detach --volume="${PWD}":/opt/ansiblerole:rw ${run_opts} ${image}:${tag} "${init}" > "${container_id}"'
  - >
    docker exec --tty "$(cat ${container_id})"
    env TERM=xterm
    env toxenv=${toxenv}
    env ANSIBLE_FORCE_COLOR=1
    bash -c 'set -ex; \
      pushd /opt/ansiblerole; \
      tox -e ${toxenv}'
notifications:
  slack:
    rooms:
      secure: uGk3oNKE6M7h+c2wMurecULb73tyyhkjM3J/FwlDr7a7SO2kM4Vki5+4UFJV3x7k0TQ2+U5Iu2m63oaAHtiEWqiVJEIIuYKu3oH/mPnVHVilU8t4elZ4d6IQo2UEzM0B0HmkUA5A6o5TJt0Y4msXHq4jXYoy6/+ot8qWzSfgpER5H1/woMFIVrmlAursVfoDB2yIOoGSFRS5P3CjoPa2yEFpPYemsiUsDClj+blt4iXqgH9Uc65Gucen1a5KnxjJsPwzXJhWcIB8CpHCFsOGOguk+tvFlJxtFuAWRNEvk59tMX82pAzIOKNmu4cL9Y4EnCPJNYT8c8NWvJoPuxfJU6THZ8S+WDIJdWSlENWyGqebDiOJkVtXBe6+YMPt5afuoUlD++usCEO9EOTajpJZcNnz8fMhsFYjn0eMn5jStCIWO/4W8JFShNFwQ3HLuJ9/EZYDvGWSIn4XXhU+wbM90BM+TeZqAdzWcsKN6TqUm3G8d5jrVGFteb1W85LB3MFVaJCdrsjwYVrFl71ojaxK7NBuzUZYgOTtDd6MC6FtkAfVyWzEfpa5rGge8TT/TwbhBVYCWOB29Ax/DgPXUtH2AaJv8on3q2R2vkmEoB7y6uz4BddPwbGR2sMz19IIj/i+KbOlQ+xtzoa+e+CTUdSJW72LSJ+1sLoKYOYz6mTU7cg=
